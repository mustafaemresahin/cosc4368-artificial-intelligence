Final Report
Introduction
This report presents the implementation of three AI algorithms: Breadth-First Search (BFS) and Depth-First Search (DFS) for shortest pathfinding, the A* search algorithm for optimal delivery route planning, and Randomized Hill Climbing (RHC) for resource allocation optimization.

Task 1: BFS and DFS for City Road Network
In this task, BFS and DFS were applied to a city road network represented as a graph. The goal was to find the shortest paths from the city center to intersections 7, 5, and 6. BFS, which explores all neighbors at the present depth before moving on to nodes at the next depth level, found the shortest path more efficiently compared to DFS. DFS explored deeper paths first but also reached the goal.

Results:

BFS Path: [0, 3, 7]
DFS Path: [0, 3, 7]
Both BFS and DFS provided the same path to the destination, but BFS is more optimal for shortest pathfinding in this scenario.

Task 2: A Algorithm for Optimal Delivery Route*
The A* algorithm was applied to find the fastest route from the warehouse to the customer's home in a grid-based city, with travel times represented as weights between nodes. The Euclidean distance was used as the heuristic to guide the search.

Results:

Optimal Path: [(1, 0), (1, 1), (2, 1), (2, 2), (2, 3)]
Total Travel Time: The algorithm efficiently found a reasonable path considering the given traffic conditions.
This result demonstrates how the A* algorithm can balance travel time and the heuristic to find an optimal route.

Task 3: Randomized Hill Climbing for Resource Allocation
Randomized Hill Climbing (RHC) was used to optimize resource allocation. The goal was to maximize the function -x^2 + 5, which has a global maximum at x = 0. Starting from an initial guess and iterating over candidate solutions, the RHC algorithm successfully found the optimal value.

Results:

Best X: 0
Best Value: 5
RHC found the maximum value for this function after several iterations, showcasing its ability to optimize in a relatively simple landscape.

Conclusion
Through these tasks, we explored BFS, DFS, A*, and Randomized Hill Climbing algorithms and applied them to real-world-inspired problems. Each algorithm demonstrated its strengths and limitations, depending on the problem type, with BFS and A* excelling at pathfinding, and RHC providing a simple yet effective optimization approach.

Screenshots of Implementations and Results
Please attach screenshots from your code executions showing the printed outputs for each task, as follows:

Task 1: BFS and DFS outputs
Task 2: A* path and total travel time
Task 3: Best X and Best Value for the Randomized Hill Climbing task.
